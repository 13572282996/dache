<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task.xsd
		">

	<!-- 注解支持 -->
 	<context:annotation-config/> 
	
	<!-- cglib动态代理 -->
  	<aop:config proxy-target-class="true"/> 
	
	<task:annotation-driven/>
	
	
	<context:property-placeholder location="classpath*:/definedweek.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />
	
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.lczx">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 国际化的消息资源文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds" value="${message.cache_seconds}" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="basenames">
			<list>
				<value>${message.common_path}</value>
				<value>${message.web_path}</value>
				<value>${message.admin_path}</value>
			</list>
		</property>
	</bean>
	
	<!-- 国际化消息 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
		<property name="defaultLocale" value="${locale}" />
	</bean>
	
	<!-- 定义数据源的Bean（使用C3P0数据源） -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<!-- 指定连接数据库的url -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="${jdbc.username}" />
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接池中的连接数（取值为最大连接数和最小连接数之间，默认值为3 -->
		<property name="initialPoolSize" value="${connection_pools.initial_pool_size}" />
		<!-- 连接池中最小连接数 -->
		<property name="minPoolSize" value="${connection_pools.min_pool_size}" />
		<!-- 配置C3P0数据源 --><!-- 连接池中的最大连接数 -->
		<property name="maxPoolSize" value="${connection_pools.max_pool_size}" />
		<!-- 指定连接池中超时时长（超过时长连接对象应该销毁） -->
		<property name="maxIdleTime" value="${connection_pools.max_idle_time}" />
		<!-- 当连接池中的连接耗尽时，C3P0一次同时获得的连接数，默认为3 -->
		<property name="acquireIncrement" value="${connection_pools.acquire_increment}" />
		<!-- 指定连接池检测线程建个时间校验一次池内的所有连接对象是否超时 -->
		<property name="checkoutTimeout" value="${connection_pools.checkout_timeout}" />
	</bean>
	
	<!-- JPA实体管理器工厂 (不使用persistence.xml文件，@ID要放到 getXXX()方法上，否则不认)-->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!--数据源-->
		<property name="dataSource" ref="dataSource"/>
		<property name="persistenceProvider" ref="persistenceProvider"/>
		<!--适配器-->
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
		<property name="jpaDialect" ref="jpaDialect"/>
		<!--扫描包-->
		<property name="packagesToScan" value="com.lczx.entity"/>
		<!--基本配置-->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.connection.isolation">2</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
				<prop key="hibernate.search.default.indexBase">${java.io.tmpdir}/${system.project_name}/index</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				
				<!-- 
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.fetch_size">18</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
			    <prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				 -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>
	
	<!-- 用于指定持久化实现厂商类 -->
	<bean id="persistenceProvider" class="org.hibernate.ejb.HibernatePersistence"/>
	
	<!-- 用于设置JPA实现厂商的特定属性 -->
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL"/>
	</bean>
	
	<!-- 用于指定一些高级特性 -->
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
	
	<!-- 事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<!-- 注解式事务 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 属性通过spring配置的方式注入到类中 -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="java.lang.System" />
		<property name="targetMethod" value="setProperty" />
		<property name="arguments">
			<list>
				<value>system.project_name</value>
				<value>${system.project_name}</value>
			</list>
		</property>
	</bean>
	
	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->
	<cache:annotation-driven cache-manager="cacheManager" />
	
	<!-- cacheManager工厂类，指定ehcache.xml的位置 -->
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:/ehcache.xml" />
		<property name="shared" value="true" />
	</bean>

	<!-- 声明cacheManager -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>
	
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="${template.loader_path}" />
		<property name="freemarkerSettings">
			<props>
				<prop key="defaultEncoding">${template.encoding}</prop>
				<prop key="url_escaping_charset">${url_escaping_charset}</prop>
				<prop key="locale">${locale}</prop>
				<prop key="template_update_delay">${template.update_delay}</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="number_format">${template.number_format}</prop>
				<prop key="boolean_format">${template.boolean_format}</prop>
				<prop key="datetime_format">${template.datetime_format}</prop>
				<prop key="date_format">${template.date_format}</prop>
				<prop key="time_format">${template.time_format}</prop>
				<prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="systemName" value="${system.name}" />
				<entry key="systemVersion" value="${system.version}" />
				<entry key="systemDescription" value="${system.description}" />
				<entry key="systemShowPowered" value="${system.show_powered}" />
				<entry key="base" value="#{servletContext.contextPath}" />
				<entry key="locale" value="${locale}" />
				<entry key="setting" value="#{T(com.lczx.util.SettingUtils).get()}" />
				<entry key="message" value-ref="messageMethod" />
				<entry key="flash_message" value-ref="flashMessageDirective" />
				<entry key="abbreviate" value-ref="abbreviateMethod" />
				<entry key="pagination" value-ref="paginationDirective" />
				<entry key="navigation_list" value-ref="navigationListDirective" />
			    <entry key="ad_position" value-ref="adPositionDirective" />
			    <entry key="friend_link_list" value-ref="friendLinkListDirective" />
			    <entry key="article_list" value-ref="articleListDirective" />
			    <entry key="article_category_root_list" value-ref="articleCategoryRootListDirective" />
				<entry key="article_category_parent_list" value-ref="articleCategoryParentListDirective" />
				<entry key="article_category_children_list" value-ref="articleCategoryChildrenListDirective" />
				<entry key="article_category_children_first_list" value-ref="articleCategoryChildrenFirstListDirective" />
				<!-- 
				<entry key="current_member" value-ref="currentMemberDirective" />
				<entry key="execute_time" value-ref="executeTimeDirective" />	
				 -->
			  
			</map>
		</property>
	</bean>

	
</beans>